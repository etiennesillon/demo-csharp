resources:
- repo: self
queue:
  name: Hosted VS2017
  demands: 
  - msbuild
  - visualstudio
  - vstest

steps:
- script: set
  displayName: show all variables
- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(Parameters.solution)'

- task: VSBuild@1
  displayName: 'Build solution'
  inputs:
    solution: '**\*.sln'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactstagingdirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'


#- powershell: ./ setEnvironmentVariables.ps1 
#  arguments: '$env:SAUCE_USERNAME $env:SAUCE_ACCESSKEY'
#  displayName: 'Set Sauce Labs Env Variables'

# Using powershell ##vso command to set an environment variable in the system
- powershell: |
   Write-Host "Sauce Username stored in ADO variables is=> $($env:SAUCE_USER)";
   Write-Host "Sauce Access Key stored in ADO variables is=> $($env:SAUCE_KEY)";
   Write-Host ("##vso[task.setvariable variable=SAUCE_USERNAME]$($env:SAUCE_USER)")
   Write-Host ("##vso[task.setvariable variable=SAUCE_ACCESS_KEY]$($env:SAUCE_KEY)")

  
- script: dotnet test '**\$(BuildConfiguration)\**\Selenium3.Nunit.Framework.dll' --logger trx
  displayName: 'Run UI tests for Selenium3.Nunit.Framework'

- task: VSTest@2
  displayName: 'Simple Selenium Test'
  inputs:
    testAssemblyVer2: '**\$(BuildConfiguration)\**\Selenium3.Nunit.Framework.dll'
    uiTests: true


- task: VSTest@2
  displayName: 'UI Tests'
  inputs:
    testAssemblyVer2: '**\$(BuildConfiguration)\**\SeleniumNunit.dll'

    testFiltercriteria: '/TestCaseFilter:"Category=Cross browser tests"'

    uiTests: true

    runInParallel: false

    platform: '$(BuildPlatform)'

    configuration: '$(BuildConfiguration)'



